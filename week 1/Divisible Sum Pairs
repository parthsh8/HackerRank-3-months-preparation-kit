Given an array of integers and a positive integer , determine the number of  (i,j) pairs where  i < j and  ar[i] + ar[i]  is divisible by k.

#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'divisibleSumPairs' function below.
#
# The function is expected to return an INTEGER.
# The function accepts following parameters:
#  1. INTEGER n
#  2. INTEGER k
#  3. INTEGER_ARRAY ar
#

def divisibleSumPairs(n, k, ar):
    ar.sort()
    temp = 0
    # ardiv = []
    count = 0  
    for i in range(0,len(ar)):
        for j in range(0,len(ar)):
            if ar[i] < ar[j]:
                add = ar[i] + ar[j]
                print(ar[i],ar[j],add)
                if add % k == 0:
                    # ardiv.append(ar[i])
                    # ardiv.append(ar[j])
                    count+=1
            j+=1
        i+=1
    # nlen =  len(ardiv) // 2
    return count
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    k = int(first_multiple_input[1])

    ar = list(map(int, input().rstrip().split()))

    result = divisibleSumPairs(n, k, ar)

    fptr.write(str(result) + '\n')

    fptr.close()
